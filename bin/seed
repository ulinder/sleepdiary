#!/usr/bin/env node
// SEED DB
var db = require('../db.js');
var m = require('moment');

function rnd(min, max) {
 return String( (Math.random() * (max - min) + min).toFixed(0) );
}

function rnd_date_time_x_format(){ // return a night or morning date
  
}

db.serialize( function(){

  // Seed the following: 2 profiles A with no posts, B with several posts. 



  var sql,
      rel_date,
      today_date = m().format("YYYY-MM-DD"),
      rnd_down_time, 
      rnd_down_date, 
      rnd_up, 
      rnd_up_date, 
      rnd_awake, 
      rnd_rate;

  // Create user A with no posts:
  db.run("INSERT INTO users (hash) VALUES (?)", ["123"], function(err){
    console.log("User A id:", this.lastID);
  });

  // Create user B with several posts:
  db.run("INSERT INTO users (hash) VALUES (?)", ["123"], function(err){
    var userID = this.lastID;

    
    stmt = db.prepare(`
    INSERT INTO posts 
    (user_id, down, up, awake, rate) 
     VALUES (?,?,?,?,?)`); 

    for (var i = 0; i < 35; i++) { // Create a series of days backwards in time
        rnd_awake      = rnd(300,7000); 
        rnd_down_time  = rnd(21,23) + ":" + rnd(10,59); 
        rnd_up_time    = "0" + rnd(6,9) + ":" + rnd(10,59); 
        rnd_rate       = rnd(1,5);
        date_down      = m().subtract(i+1, 'days').format("YYYY-MM-DD").toString(); 
        date_up        = m().subtract(i, 'days').format("YYYY-MM-DD").toString(); 


        if(rnd(0,1) == 1) stmt.run([ // randomly skip days 
            userID, 
            m(`${date_down} ${rnd_down_time}`).format("X"), 
            m(`${date_up} ${rnd_up_time}`).format("X"), 
            Number(rnd_awake), 
            Number(rnd_rate) 
          ]);
    }

    stmt.finalize();
    db.close(); 
    console.log("User B id:", userID);
    console.log("User B hash: 123");
    console.log(`Login B link: /${userID}/123`);
  });

});


// ┌─────────┬─────────┐
// │ (index) │  name   │
// ├─────────┼─────────┤
// │    0    │ 'users' │
// │    1    │ 'posts' │
// └─────────┴─────────┘
//  db > pragma table_info('posts');
// ┌─────────┬─────┬───────────┬─────────────┬─────────┬─────────────────────┬────┐
// │ (index) │ cid │   name    │    type     │ notnull │     dflt_value      │ pk │
// ├─────────┼─────┼───────────┼─────────────┼─────────┼─────────────────────┼────┤
// │    0    │  0  │   'id'    │  'INTEGER'  │    0    │        null         │ 1  │
// │    1    │  1  │ 'user_id' │  'INTEGER'  │    0    │        null         │ 0  │
// │    2    │  2  │  'down'   │  'INTEGER'  │    0    │        null         │ 0  │
// │    3    │  3  │  'awake'  │  'INTEGER'  │    0    │        null         │ 0  │
// │    4    │  4  │   'up'    │  'INTEGER'  │    0    │        null         │ 0  │
// │    5    │  5  │  'rate'   │  'INTEGER'  │    0    │        null         │ 0  │
// │    6    │  6  │ 'status'  │  'INTEGER'  │    0    │        null         │ 0  │
// │    7    │  7  │    't'    │ 'TIMESTAMP' │    0    │ 'CURRENT_TIMESTAMP' │ 0  │
// └─────────┴─────┴───────────┴─────────────┴─────────┴─────────────────────┴────┘
